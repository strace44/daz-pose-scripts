// DAZ Studio version 4.12.0.86 filetype DAZ Script

// Nodes to simply lock bend, twist, and side-to-side
var torso_nodes = [
	"chestUpper",
	"chestLower",
	"abdomenUpper"
];
var head_nodes = [
	"head",
	"neckUpper",
	"neckLower"
];

var arm_node_names = [
	"Thumb3",
	"Thumb2",
	"Thumb1",
	"Hand",
	"ForearmTwist",
	"ForearmBend",
	"ShldrTwist",
	"ShldrBend",
	"Collar"
];
var left_right = [
	"l",
	"r"
];
var pose_control_prefix = ["pCTRL"];
var hand_pose_properties = [
	"ThumbInOut",
	"ThumbGrasp",
	"ThumbFist",
	"ThumbBend",
	"HandSpread",
	"HandGrasp",
	"HandFist",
	"HandChop"
];

// For multiple characters to lock
var root_nodes = [];

var selected_nodes = Scene.getSelectedNodeList();
for (var i = 0; i < selected_nodes.length; i++) {
	var selected_node = selected_nodes[i];
	while (!selected_node.isRootNode()) {
		print(selected_node.name);
		//selected_node = selected_node.getNodeParent();
	}
	root_nodes.push(selected_node);
}
//print(root_nodes);

function product2(labels_1, labels_2) {
	var joined = [];
	for (var i = 0; i < labels_1.length; i++) {
		for (var j = 0; j < labels_2.length; j++) {
			var pieces = [labels_1[i], labels_2[j]];
			joined.push(pieces.join(''));
		}
	}
	return joined;
}

function product3(labels_1, labels_2, labels_3) {
	var joined = [];
	for (var i = 0; i < labels_1.length; i++) {
		for (var j = 0; j < labels_2.length; j++) {
			for (var k = 0; k < labels_3.length; k++) {
				var pieces = [labels_1[i], labels_2[j], labels_3[k]];
				joined.push(pieces.join(''));
			}
		}
	}
	return joined;
}

var lr_hand_pose_properties = product3(pose_control_prefix, left_right, hand_pose_properties);
//print(lr_hand_pose_properties);

function lock_all(root_node, node_names, lock) {
	/*
	property_list = root_node.getPropertyList();
	for (var i = 0; i < property_list.length; i++) {
		//print(property_list[i].name);
	}
	for (var k = 0; k < lr_hand_pose_properties.length; k++) {
		// Just try locking all of them, it doesn't hurt
		print("Getting property", lr_hand_pose_properties[k]);
		var property_obj = root_node.getProperty(lr_hand_pose_properties[k]);
		if (property_obj) {
			print("is locked:", property_obj.isLocked());
			print("Locking property:", property_obj.lock(lock));
		}
	}*/
	for (var j = 0; j < node_names.length; j++) {
		var name = node_names[j];
		var node = root_node.findNodeChild(name, true);
		/*if (name == "lHand") {
			print("Found left hand");
		}
		for (var k = 0; k < lr_hand_pose_properties.length; k++) {
			// Just try locking all of them, it doesn't hurt
			var property_obj = root_node.getProperty(lr_hand_pose_properties[k]);
			if (property_obj) {
				print("is locked:", property_obj.isLocked());
				print("Locking property", lr_hand_pose_properties[k]);
				property_obj.lock(lock);
			}
		}
		if (name == "lHand") {
			print("Found left hand");
			var properties = node.getPropertyList();
			var pose_property = node.findProperty(hand_pose_properties[0]);
			print(pose_property);
		}*/
		if (node.getXRotControl()) {
			node.getXRotControl().lock(lock);
		}
		if (node.getYRotControl()) {
			node.getYRotControl().lock(lock);
		}
		if (node.getZRotControl()) {
			node.getZRotControl().lock(lock);
		}
	}
}

function lock_all_pose(root_node, lock) {
	property_list = root_node.getPropertyList();
	for (var i = 0; i < property_list.length; i++) {
		//print(property_list[i].name);
	}
	for (var k = 0; k < lr_hand_pose_properties.length; k++) {
		// Just try locking all of them, it doesn't hurt
		print("Getting property", lr_hand_pose_properties[k]);
		var property_obj = root_node.getProperty(lr_hand_pose_properties[k]);
		if (property_obj) {
			print("is locked:", property_obj.isLocked());
			print("Locking property:", property_obj.lock(lock));
		}
	}
}

var do_lock = true;

for (var i = 0; i < root_nodes.length; i++) {
	var root_node = root_nodes[i];
	lock_all(root_node, torso_nodes, do_lock);
	lock_all(root_node, head_nodes, do_lock);
	lock_all(root_node, product2(left_right, arm_node_names), do_lock);
}
